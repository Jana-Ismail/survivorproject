# Generated by Django 5.1.1 on 2024-10-31 16:53

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.IntegerField()),
                ('name', models.CharField(max_length=100, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_number', models.IntegerField()),
                ('air_date_time', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='survivorapi.season')),
            ],
            options={
                'ordering': ['episode_number'],
                'unique_together': {('season', 'episode_number')},
            },
        ),
        migrations.CreateModel(
            name='SeasonLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.season')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EpisodeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.episode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('season_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.seasonlog')),
            ],
            options={
                'ordering': ['episode__episode_number'],
                'unique_together': {('user', 'episode')},
            },
        ),
        migrations.CreateModel(
            name='Survivor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('img_url', models.URLField(blank=True, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.season')),
            ],
        ),
        migrations.CreateModel(
            name='SurvivorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_juror', models.BooleanField(default=False)),
                ('episode_voted_out', models.IntegerField(blank=True, null=True)),
                ('is_user_winner_pick', models.BooleanField(default=False)),
                ('is_season_winner', models.BooleanField(default=False)),
                ('season_log', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survivorapi.seasonlog')),
                ('survivor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.survivor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayedIdol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_idols', to='survivorapi.episodelog')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_idols', to='survivorapi.survivorlog')),
            ],
        ),
        migrations.CreateModel(
            name='FoundIdol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_idols', to='survivorapi.episodelog')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_idols', to='survivorapi.survivorlog')),
            ],
            options={
                'verbose_name': 'found idol',
                'verbose_name_plural': 'found idols',
            },
        ),
        migrations.CreateModel(
            name='FoundAdvantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_advantages', to='survivorapi.episodelog')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='found_advantages', to='survivorapi.survivorlog')),
            ],
            options={
                'verbose_name': 'found advantage',
                'verbose_name_plural': 'found advantages',
            },
        ),
        migrations.CreateModel(
            name='FavoriteSurvivor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.survivorlog')),
            ],
        ),
        migrations.CreateModel(
            name='SurvivorNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.survivorlog')),
            ],
        ),
        migrations.CreateModel(
            name='SurvivorTribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survivor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.survivor')),
            ],
        ),
        migrations.AddField(
            model_name='survivor',
            name='tribes',
            field=models.ManyToManyField(related_name='survivors', through='survivorapi.SurvivorTribe', to='survivorapi.survivor'),
        ),
        migrations.CreateModel(
            name='Tribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('is_merge_tribe', models.BooleanField(default=False)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.season')),
            ],
        ),
        migrations.AddField(
            model_name='survivortribe',
            name='tribe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survivorapi.tribe'),
        ),
        migrations.CreateModel(
            name='WonImmunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_individual', models.BooleanField(default=False)),
                ('episode_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_immunities', to='survivorapi.episodelog')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_immunities', to='survivorapi.survivorlog')),
            ],
            options={
                'verbose_name': 'won immunity',
                'verbose_name_plural': 'won immunities',
                'unique_together': {('episode_log', 'survivor_log')},
            },
        ),
        migrations.CreateModel(
            name='WonReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_rewards', to='survivorapi.episodelog')),
                ('survivor_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_rewards', to='survivorapi.survivorlog')),
            ],
            options={
                'verbose_name': 'found idol',
                'verbose_name_plural': 'found idols',
                'unique_together': {('episode_log', 'survivor_log')},
            },
        ),
    ]
